#!/usr/bin/env bash

#******************************************************************************#
#               SOME SCRIPTS FOR MYSELF, AND WHY NOT FOR YOU TOO !
#
#  Main Developer : David Fischer (david.fischer.ch@gmail.com)
#  Copyright      : Copyright (c) 2009-2013 David Fischer. All rights reserved.
#
#******************************************************************************#
#
# This file is part of David Fischer's pyutils Project.
#
# This project is free software: you can redistribute it and/or modify it under
# the terms of the EUPL v. 1.1 as provided by the European Commission.
# This project is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#
# See the European Union Public License for more details.
#
# You should have received a copy of the EUPL General Public License along with
# this project. If not, see he EUPL licence v1.1 is available in 22 languages:
#     22-07-2013, <https://joinup.ec.europa.eu/software/page/eupl/licence-eupl>
#
# Retrieved from https://github.com/davidfischer-ch/logicielsUbuntu.git

. logicielsUbuntuCommon

#lu-chrootSsh()
{
  techo "Ubuntu's Softwares Setup Menu [Packages and Scripts]"
  techo '---------------------------- copyright David Fischer'
  techo ''
  pecho 'TODO'
  # TODO URL origine du script
  pecho ''

  sshdConfig='/etc/ssh/sshd_config'

  if [ "`id -u`" != '0' ]; then
    xecho "This script must be run as root"
  fi

  if [ ! -f /etc/debian_version ]; then
    xecho "This script is made for Debian based Linux"
  fi

  if [ ! -f $sshdConfig ]; then
    xecho "You need to install openssh-server"
  fi

  if [ ! $# -eq 2 ]; then
    xecho "Usage: `basename $0` username chrootPath\n\tusername   : The username to chroot\n\tchrootPath : The path for the chroot"
  fi

  username=$1
  chrootPath=`echo $2/ | sed 's://:/:g'`

  if grep -q "^$username:" /etc/passwd
  then mecho "User $username is going to be chroot'ed"
  else xecho "User $username doesn't exist on /etc/passwd, chroot aborted"
  fi

  if [ ! -d "$chrootPath" ]; then
    mecho "The directory $chrootPath doesn't exist"
    yesOrNo 0 'do you want to create it'
    if [ $REPLY -ne 0 ]; then
      recho 'operation aborted by the user'
      exit 0
    fi
    mkdir -p "$chrootPath"
  fi

  mecho 'translate chrootPath to an absolute path'
  cd "$chrootPath" || exit 1
  chrootPath=`pwd`
  mecho "User $username is going to be chroot'ed in $chrootPath"

  yesOrNo 0 'do the chroot'
  if [ $REPLY -ne 0 ]; then
    recho 'operation aborted by the user'
    exit 0
  fi

  mecho 'add chroot to user in SSH Config'
  if ! grep -q "Match User $username" $sshdConfig; then
echo "
#USER CHROOT generated by '$0'
Match User $username
ChrootDirectory $chrootPath
AllowTCPForwarding no
X11Forwarding no" >> $sshdConfig
  else
    recho "User $username is already chroot'ed in $sshdConfig"
  fi

  # here specify the applications you want into the enviroment
  applications="  /bin/sh
  /bin/grep
  /bin/cat
  /bin/gzip
  /bin/gunzip
  /bin/more
  /bin/bash
  /bin/ls
  /bin/mkdir
  /bin/mv
  /bin/pwd
  /bin/rm
  /bin/ping
  /bin/ps
  /bin/uname
  /bin/sed
  /usr/bin/env
  /usr/bin/wget
  /usr/bin/clear
  /usr/bin/ftp
  /usr/bin/host
  /usr/bin/vi
  /usr/bin/less
  /usr/bin/tail
  /usr/bin/nslookup
  /usr/bin/id
  /usr/bin/ssh
  /usr/bin/dircolors
  /usr/bin/etherwake"

  # EXTRAS, added for my special case
    applications="$applications /bin/ping
    /usr/bin/apt-get
    /usr/bin/basename
    /usr/bin/dialog
    /usr/bin/dirname
    /usr/bin/find
    /usr/bin/iconv
    /usr/bin/net
    /usr/bin/sort
    /usr/bin/tput
    /usr/bin/which"

   applications="$applications
 /usr/bin/net
 /usr/bin/nmblookup
 /usr/bin/smbpasswd
 /usr/bin/testparm"
  # END OF EXTRAS

  mecho 'create chroot directories'
  directories="etc/terminfo bin lib lib64 usr/bin dev/pts home/$username"
  for directory in $directories; do
    mkdir -p $chrootPath/$directory || exit 1
  done

  # for strange reason, these libraries are not in the ldd output, but without them some stuff will not work, like usr/bin/groups
  cp /lib/ld-linux* /lib/libnss_compat* /lib/libnsl* /lib/libnss_files* /lib/libresolv* /lib/libnss_dns* $chrootPath/lib/
  cp /lib64/ld-linux* /lib64/libnss_compat* /lib64/libnsl* /lib64/libnss_files* /lib64/libresolv* /lib64/libnss_dns* $chrootPath/lib64/

  mecho "we need as many tty's as consoles"
  mknod -m 666 $chrootPath/dev/tty  c 5 0
  mknod -m 644 $chrootPath/dev/tty1 c 4 1
  mknod -m 644 $chrootPath/dev/tty2 c 4 2
  mknod -m 644 $chrootPath/dev/tty3 c 4 3
  mknod -m 644 $chrootPath/dev/tty4 c 4 4
  mknod -m 644 $chrootPath/dev/tty5 c 4 5
  mknod -m 644 $chrootPath/dev/tty6 c 4 6
  mecho 'and pts'
  mknod -m 666 $chrootPath/dev/pts/0  c 136 0
  mknod -m 666 $chrootPath/dev/pts/1  c 136 1
  mecho 'some special nodes, just for fun'
  mknod -m 444 $chrootPath/dev/urandom c 1 9
  mknod -m 666 $chrootPath/dev/zero c 1 5
  mknod -m 666 $chrootPath/dev/null c 1 3

  mecho 'create short versions of chroot/usr/bin/groups'
  echo $e_ "#!/bin/bash\nid -Gn" > $chrootPath/usr/bin/groups
  chmod 755 $chrootPath/usr/bin/groups

  mecho 'add some users to chroot/etc/passwd'
  echo `grep /etc/passwd -e "^$username:" | cut -d: -f -5`:/home/$username:`grep /etc/passwd -e "^$username:" | cut -d: -f 7-` > $chrootPath/etc/passwd
  grep /etc/group -e "^root" -e "^$username:" > $chrootPath/etc/group

  mecho 'set prompt'
  cp /etc/profile $chrootPath/etc/profile
  cp -r /etc/bash* $chrootPath/etc
  echo "
export HOME=/home/$username
cd" >> $chrootPath/etc/profile

  mecho 'set applications'
  for application in $applications; do
    destination=`echo $chrootPath/$application | sed 's://:/:g'`
    cp $application $destination || exit 1
    # obtain a list of related libraries
    ldd $application > /dev/null
    if [ "$?" = 0 ] ; then
      libraries=`ldd $application`
      for library in $libraries; do
        if [ -f $library ]; then
          destination=`dirname $library`
          destination=`echo $chrootPath/$destination | sed 's://:/:g'`
          mkdir -p $destination > /dev/null 2>&1
          destination=`echo $chrootPath/$library | sed 's://:/:g'`
          cp $library $destination
        fi
      done
    fi
  done

  mecho 'set configuration'
  cp /etc/host.conf     $chrootPath/etc/
  cp /etc/hosts         $chrootPath/etc/
  cp /etc/nsswitch.conf $chrootPath/etc/
  cp /etc/localtime     $chrootPath/etc/
  cp /etc/resolv.conf   $chrootPath/etc/
  cp /etc/services      $chrootPath/etc/
  cp /etc/protocols     $chrootPath/etc/
  cp -r /etc/terminfo/* $chrootPath/etc/terminfo/

  mecho 'EXTRAS, added for my special case'
  mkdir $chrootPath/etc/samba/
  cp /etc/samba/smb.conf $chrootPath/etc/samba/
  cp -r /lib/terminfo    $chrootPath/lib/
  cp -r /usr/lib64/gconv $chrootPath/usr/lib/
  mkdir $chrootPath/tmp/
  chmod +t $chrootPath/tmp/
  chmod 777 $chrootPath/tmp/
  mecho 'EXTRAS, execution rights'
  chmod +s $chrootPath/bin/ping
  chmod +s $chrootPath/usr/bin/etherwake
#  chmod +s $chrootPath/usr/bin/net

  mecho 'change home directory owner to the chrooted user'
  usrid=`grep /etc/passwd -e "^$username:"  | cut -d':' -f 3`
  grpid=`grep /etc/passwd -e "^$username:"  | cut -d':' -f 4`
  chown -R root:root $chrootPath/home
  chown -R $usrid:$grpid $chrootPath/home/$username

  mecho 'restart ssh'
  $service ssh restart
  recho 'chroot done and ready to use ;-)'
}
